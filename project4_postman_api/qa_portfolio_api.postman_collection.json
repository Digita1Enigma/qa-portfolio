{
  "info": {
    "_postman_id": "a0498cd2-4e02-4b3b-bc8d-23f096233b5a",
    "name": "QA Portfolio API Collection (JSONPlaceholder + ReqRes)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Учебная коллекция для портфолио: базовые запросы и тесты на публичные API."
  },
  "item": [
    {
      "name": "JSONPlaceholder",
      "item": [
        {
          "name": "GET /posts (list)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{JSONPH_BASE}}/posts",
              "host": [
                "{{JSONPH_BASE}}"
              ],
              "path": [
                "posts"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
                  "pm.test('Response is array with length > 0', function () {",
                  "  var data = pm.response.json();",
                  "  pm.expect(Array.isArray(data)).to.be.true;",
                  "  pm.expect(data.length).to.be.above(0);",
                  "});",
                  "pm.test('First item has userId, id, title', function () {",
                  "  var data = pm.response.json();",
                  "  pm.expect(data[0]).to.have.keys(['userId','id','title','body']);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "POST /posts (create)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"title\": \"demo\", \"body\": \"hello\", \"userId\": 1}"
            },
            "url": {
              "raw": "{{JSONPH_BASE}}/posts",
              "host": [
                "{{JSONPH_BASE}}"
              ],
              "path": [
                "posts"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201', () => pm.response.to.have.status(201));",
                  "const payload = pm.response.json();",
                  "pm.test('Response has id', () => pm.expect(payload).to.have.property('id'));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ReqRes",
      "item": [
        {
          "name": "GET /users?page=2",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{REQRES_BASE}}/users?page=2",
              "host": [
                "{{REQRES_BASE}}"
              ],
              "path": [
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "2"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "const j = pm.response.json();",
                  "pm.test('Has data array', () => pm.expect(j).to.have.property('data').that.is.an('array'));",
                  "pm.test('At least 1 user', () => pm.expect(j.data.length).to.be.above(0));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "POST /login (negative: missing password)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\": \"eve.holt@reqres.in\"}"
            },
            "url": {
              "raw": "{{REQRES_BASE}}/login",
              "host": [
                "{{REQRES_BASE}}"
              ],
              "path": [
                "login"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 400 on missing password', () => pm.response.to.have.status(400));",
                  "const j = pm.response.json();",
                  "pm.test('Has error field', () => pm.expect(j).to.have.property('error'));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "POST /login (positive)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\": \"eve.holt@reqres.in\", \"password\": \"cityslicka\"}"
            },
            "url": {
              "raw": "{{REQRES_BASE}}/login",
              "host": [
                "{{REQRES_BASE}}"
              ],
              "path": [
                "login"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200 on valid creds', () => pm.response.to.have.status(200));",
                  "pm.test('Has token', () => pm.expect(pm.response.json()).to.have.property('token'));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}